## Syntax of Markdown
This section is prepared by Jingang Chen, an undergraduate junior pursuing  a 
dual degree in computer science and statistical data science.

This section will focus on the syntax of Markdown, which is a  lightweight 
markup language that allows to user to write content in plain text format, 
which can be rendered to various formats like HTML and PDF, and is widely used 
in open-source documentation.

### Headers
In markdown, creating heading levels for sections and subsections are denoted 
by `#` (atx-style) in the beginning of the line. The number of hashtags denote 
the heading level, with more hashtags indicating smaller heading levels. 
There are a total of 6 heading levels using the hashtags.

```markdown
# Header 1 (Main)
## Header 2 (Subheading)
### Header 3 (Subheading)
#### Header 4
##### Header 5
###### Header 6
```

> A space is required after the hashtags to denote that it is a heading

Headings can also be denoted by using underlined `=` and `-` signs, though this 
will only work for the first and second level headers respectively.

```markdown
Header 1
===
Header 2
----
```
Any amount of `=` and `-` signs will work to create those top two headings.

### Paragraph and Line Break Convention
To seperate text into paragraphs, make sure there is at least one blank space 
between the blocks of texts.

```markdown
This is the first pargraph which can contain multiple lines, and as long there
is no blank line in this, then this block of text is one paragraph.

This is an example of a second paragraph. This one is seperated by a blank line
from the paragraph above to denote a different paragraph.
```
**Output**:

This is the first pargraph which can contain multiple lines, and as long there
is no blank line in this, then this block of text is one paragraph.

This is an example of a second paragraph. This one is seperated by a blank line
from the paragraph above to denote a different paragraph.

- - -

To create a line break within a paragraph, end whatever line you're on with two
spaces, then press enter/return to start a new line. The break tag `<br>` is 
also sufficient.

```markdown
This is one line.  
This is a line that is seperated from the line above using two spaces <br>
This is a third line seperated using the `<br>` break tag
```
**Output:**

This is one line.  
This is another line that is seperated from the line above. <br>
This is a third line seperated using the `<br>` break tag

### Text Formatting

#### Bolding and Italics
*Italic* text, uses single asterisks (*) or underscores (_) around the text, 
while **bold** text uses double asterisks or underscores. To make the text both 
***bolded and italicized***, put three asterisks or underscores around the text.

|                  Syntax                            | Output                |
|----------------------------------------------------|-----------------------|
| `*Italicized*` <br> `_Italicized_`                 | _Italicized_          |
| `**Bolded**` <br> `__Bolded__`                     |  **Bolded**           |
| `***bold & italics***` <br> ` ___bold & italics___`| ***bolded & italics***|

Emphasis can also be placed within a word as well, but only `*` can be used, 
not `_`.

|                  Syntax              |            Output                   |
|--------------------------------------|-------------------------------------|
|`s*uperfragalis*t ex**pialidociou**s` | s*uperfragalis*t ex**pialidociou**s |

#### Strikethrough
Strikethrough uses `~~` around the text to cross it out.

|     Syntax              |         Output         |
|-------------------------|------------------------|
|`~~strikethrough text~~` | ~~strikethrough text~~ |

#### Superscript and Subscript
To superscript, use `^` around the desired text.

For subscript, use `~` around the desired text.

|   Syntax       |   Output       |
|----------------|----------------|
|`superscript^2^`| superscript^2^ |
|`subscript~2~`  | subscript~2~   |

#### Underlining and Highlighting
To underline, bracket the desired text with `[]`, and then follow that using 
`{.underline}`.

To highlight, bracket the desired text with `[]`, and follow that using 
`{.mark}`. Alternatively you can start the text with `<mark>` and end it with 
`</mark>`.

|                  Syntax                     |      Output                   |
|---------------------------------------------|-------------------------------|
|`[underlined text]{.underline}`              | [underlined text]{.underline} |
|`[highlighted]{.mark}` <br> `<mark>higlighted</mark>` | [highlighted]{.mark} |

### Code

#### Inline Code
Markdown allows for inline code and code blocks.

To insert inline code, use the backticks `` ` `` around the text

```markdown
This is an example of `inline code` in a text.
```
**Output**: This is an example of `inline code` in a text.

To display the `` ` `` as part of an inline code, surround the character with 
` `` ` backticks and spacing them apart from `` ` ``.

#### Code Blocks
To create code blocks, ` ``` ` can be used.

```
    ```
    some code
    ```
```
Output:

```
some code
```

Alternatively, code blocks can be indented by identing four or more spaces
prior to the code.

    This is code using the indentation of four spaces
        This line has more than four spaces

A language can also be added to specify the language of the code blocks if
` ``` ` is used.

    ```python
    print('some python code')
    ```

**Output**:

```python
print('some python code')
```

To make the code executable, put `{}` around the syntax language being used in
the code blocks.

```python
    ```{{python}}
    print("Some python code")
    ```
```

**Output**:
```{python}
print('some python code')
```
